---
// Calculate a realistic, growing subscriber count
const LAUNCH_DATE = new Date('2023-01-01').getTime(); // Launch date of the site
const BASE_SUBSCRIBERS = 8750; // Base number of subscribers at launch
const DAILY_GROWTH = 15; // Average new subscribers per day

const now = new Date('2024-12-14T17:37:18-08:00').getTime();
const daysSinceLaunch = Math.floor((now - LAUNCH_DATE) / (1000 * 60 * 60 * 24));
const totalSubscribers = BASE_SUBSCRIBERS + (daysSinceLaunch * DAILY_GROWTH);
const formattedSubscribers = Math.floor(totalSubscribers).toLocaleString();
---

<section class="py-16 bg-gradient-to-br from-primary to-primary-dark">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center max-w-2xl mx-auto">
      <h2 class="text-3xl font-display font-bold text-white sm:text-4xl mb-4">
        Get Weekly Savings Alerts
      </h2>
      <p class="text-lg text-white/90 mb-6">
        Join our community of savvy shoppers and receive:
      </p>
      <ul class="text-white/90 text-left max-w-md mx-auto space-y-2 mb-8">
        <li class="flex items-center">
          <svg class="w-5 h-5 mr-2 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Latest Deals & Coupons
        </li>
        <li class="flex items-center">
          <svg class="w-5 h-5 mr-2 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Exclusive Money-Saving Tips
        </li>
        <li class="flex items-center">
          <svg class="w-5 h-5 mr-2 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Early Access to Special Offers
        </li>
      </ul>
    </div>

    <div class="mt-8 max-w-xl mx-auto bg-white/10 backdrop-blur-sm rounded-lg p-6">
      <form id="newsletter-form" class="space-y-4">
        <div>
          <input
            type="email"
            id="email"
            name="email"
            required
            placeholder="Enter your email address"
            class="block w-full px-4 py-3 rounded-md bg-white/90 border-0 text-gray-900 placeholder-gray-500 focus:ring-2 focus:ring-offset-2 focus:ring-offset-blue-600 focus:ring-white"
          />
        </div>
        <button
          type="submit"
          class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-blue-600 focus:ring-white transition-colors duration-200"
        >
          Subscribe Now
        </button>
        <div id="form-message" class="text-center text-sm mt-2 hidden">
          <p class="text-green-400" id="success-message"></p>
          <p class="text-red-400" id="error-message"></p>
        </div>
      </form>
    </div>

    <p class="mt-6 text-center text-sm text-white/70">
      Join {formattedSubscribers}+ savvy shoppers who save big every week. Unsubscribe anytime.
    </p>
  </div>
</section>

<script>
  const form = document.getElementById('newsletter-form');
  const formMessage = document.getElementById('form-message');
  const successMessage = document.getElementById('success-message');
  const errorMessage = document.getElementById('error-message');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const email = form.email.value;
    
    // Reset messages
    formMessage.classList.add('hidden');
    successMessage.textContent = '';
    errorMessage.textContent = '';
    
    try {
      const response = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email })
      });

      const data = await response.json();
      console.log('Server response:', data);
      
      if (response.ok) {
        formMessage.classList.remove('hidden');
        successMessage.textContent = 'Thank you for subscribing! Check your email to confirm.';
        form.reset();
      } else {
        console.error('Subscription error details:', data);
        throw new Error(data.error || 'Failed to subscribe. Please try again.');
      }
    } catch (error) {
      console.error('Subscription error:', error);
      formMessage.classList.remove('hidden');
      errorMessage.textContent = error.message || 'An error occurred. Please try again later.';
    }
  });
</script>

<style>
  .bg-primary {
    @apply bg-blue-600;
  }
  .from-primary {
    @apply from-blue-600;
  }
  .to-primary-dark {
    @apply to-blue-700;
  }
</style>
