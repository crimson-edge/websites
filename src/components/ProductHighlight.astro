---
interface Props {
  title: string;
  description: string;
  buttonText: string;
  buttonLink: string;
  imageUrl: string;
}

const { 
  title, 
  description, 
  buttonText, 
  buttonLink, 
  imageUrl 
} = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
  <div class="md:flex h-full">
    <div class="md:w-1/2 relative overflow-hidden">
      <img 
        class="h-64 md:h-full w-full object-cover transform transition-transform duration-300 hover:scale-105" 
        src={imageUrl} 
        alt={`${title} product image`}
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent md:hidden"></div>
    </div>
    <div class="md:w-1/2 p-6 md:p-8 flex flex-col justify-between bg-gradient-to-br from-white to-blue-50">
      <div>
        <h3 class="text-xl md:text-2xl font-bold text-gray-900 mb-2">{title}</h3>
        <p class="text-gray-600 mb-6 leading-relaxed">{description}</p>
      </div>
      <div>
        <a 
          href={buttonLink} 
          class="inline-flex items-center justify-center w-full bg-indigo-600 text-white py-3 px-6 rounded-lg text-lg font-semibold hover:bg-indigo-700 transform hover:-translate-y-0.5 transition-all duration-200"
        >
          {buttonText}
          <svg class="w-5 h-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>
